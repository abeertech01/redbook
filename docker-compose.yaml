services:
  client:
    container_name: client
    build:
      context: ./client
      dockerfile: client.dockerfile
    ports:
      - "5173:5173"
    networks:
      - redbook_net
    env_file:
      - ./client/.env
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server

  server:
    container_name: server
    build:
      context: ./server
      dockerfile: server.dockerfile
    env_file:
      - ./server/.env
    ports:
      - "3030:3030"
    networks:
      - redbook_net
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      migration:
        condition: service_completed_successfully

  migration:
    container_name: migration
    build:
      context: ./server
      dockerfile: migration.dockerfile
    env_file:
      - ./server/.env
    networks:
      - redbook_net
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./server:/app
      - /app/node_modules

  db:
    container_name: db
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    networks:
      - redbook_net
    env_file:
      - ./server/.env
    volumes:
      - pgdata:/data/db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  redbook_net:
    driver: bridge

volumes:
  pgdata: {}
